/*
 * Created on 3 Nov 2017 ( Time 09:39:01 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package imta.modele.persistence.services.fake;

import java.util.List;
import java.util.Map;

import imta.modele.bean.jpa.UtilisateurEntity;
import imta.modele.persistence.commons.fake.GenericFakeService;
import imta.modele.persistence.services.UtilisateurPersistence;

/**
 * Fake persistence service implementation ( entity "Utilisateur" )
 *
 * @author Telosys Tools Generator
 */
public class UtilisateurPersistenceFAKE extends GenericFakeService<UtilisateurEntity> implements UtilisateurPersistence {

	public UtilisateurPersistenceFAKE () {
		super(UtilisateurEntity.class);
	}
	
	protected UtilisateurEntity buildEntity(int index) {
		UtilisateurEntity entity = new UtilisateurEntity();
		// Init fields with mock values
		entity.setIdentifiant( nextString() ) ;
		entity.setPassword( nextString() ) ;
		entity.setNom( nextString() ) ;
		entity.setPrenom( nextString() ) ;
		entity.setAdresse( nextString() ) ;
		entity.setCity( nextString() ) ;
		entity.setCodePostal( nextString() ) ;
		entity.setPays( nextString() ) ;
		return entity ;
	}
	
	
	public boolean delete(UtilisateurEntity entity) {
		log("delete ( UtilisateurEntity : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( String identifiant ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(UtilisateurEntity entity) {
		log("insert ( UtilisateurEntity : " + entity + ")" ) ;
	}

	public UtilisateurEntity load( String identifiant ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<UtilisateurEntity> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<UtilisateurEntity> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<UtilisateurEntity> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public UtilisateurEntity save(UtilisateurEntity entity) {
		log("insert ( UtilisateurEntity : " + entity + ")" ) ;
		return entity;
	}

	public List<UtilisateurEntity> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

	@Override
	public long countAll() {
		return 0 ;
	}

}
