/*
 * Created on 3 Nov 2017 ( Time 09:39:01 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package imta.modele.test.persistence;


import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;

import imta.modele.bean.jpa.UtilisateurEntity;
import imta.modele.mock.UtilisateurEntityMock;
import imta.modele.persistence.PersistenceServiceProvider;
import imta.modele.persistence.services.UtilisateurPersistence;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for Utilisateur persistence service
 * 
 * @author Telosys Tools Generator
 *
 */
public class UtilisateurPersistenceTest 
{
	@Test
	public void test1() {
		
		System.out.println("Test count ..." );
		
		UtilisateurPersistence service = PersistenceServiceProvider.getService(UtilisateurPersistence.class);
		System.out.println("CountAll = " + service.countAll() );
	}
	
	@Test
	public void test2() throws NoSuchAlgorithmException, UnsupportedEncodingException {
		
		System.out.println("Test Utilisateur persistence : delete + load ..." );
		
		UtilisateurPersistence service = PersistenceServiceProvider.getService(UtilisateurPersistence.class);
		
		UtilisateurEntityMock mock = new UtilisateurEntityMock();
		
		// TODO : set primary key values here 
		process( service, mock, "A1"  );
		// process( service, mock, ... );
	}

	private void process(UtilisateurPersistence service, UtilisateurEntityMock mock, String identifiant ) throws NoSuchAlgorithmException, UnsupportedEncodingException {
		System.out.println("----- "  );
		System.out.println(" . load : " );
		UtilisateurEntity entity = service.load( identifiant );
		if ( entity != null ) {
			// Found 
			System.out.println("   FOUND : " + entity );
			
			// Save (update) with the same values to avoid database integrity errors  
			System.out.println(" . save : " + entity );
			service.save(entity);
			System.out.println("   saved : " + entity );
		}
		else {
			// Not found 
			System.out.println("   NOT FOUND" );
			// Create a new instance 
			entity = mock.createInstance( identifiant ) ;
			Assert.assertNotNull(entity);

			// No reference : insert is possible 
			// Try to insert the new instance
			System.out.println(" . insert : " + entity );
			service.insert(entity);
			System.out.println("   inserted : " + entity );

			System.out.println(" . delete : " );
			boolean deleted = service.delete( identifiant );
			System.out.println("   deleted = " + deleted);
			Assert.assertTrue(deleted) ;
		}		
	}
}
